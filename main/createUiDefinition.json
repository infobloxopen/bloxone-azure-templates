{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Azure.CreateUIDef",
  "version": "0.1.2-preview",
  "parameters": {
    "config": {
      "isWizard": false,
      "basics": {
        "resourceGroup": {
          "constraints": {
            "validations": [
              {
                "isValid": "[not(contains(resourceGroup().name, 'test'))]",
                "message": "Resource Group name can not contain test"
              }
            ]
          },
          "allowExisting": true
        }
      }
    },
    "basics": [
      {
        "name": "vmName",
        "type": "Microsoft.Common.TextBox",
        "label": "Bloxone VM name",
        "defaultValue": "Bloxone",
        "toolTip": "The name of the new Bloxone vm.",
        "multiLine": false,
        "constraints": {
          "required": true,
          "regex": "^(?!\\.|\\-|[0-9])([0-9a-zA-Z.-]){1,64}[^-.]$",
          "validationMessage": "Allowed characters for the VM name: [A-Z], [a-z], [0-9], [.-].<br />The length must be between 1 and 64 characters.<br />The VM name cannot start from [0-9], [.-] or end with [.-]."
        },
        "visible": true
      },
      {
        "name": "vmSize",
        "type": "Microsoft.Compute.SizeSelector",
        "label": "VM size",
        "toolTip": "Select the size of VM.",
        "recommendedSizes": [
          "Standard_F8s_v2",
          "Standard_F8s"
        ],
        "visible": "true",
        "osPlatform": "Linux"
      },
      {
        "name": "jointoken",
        "type": "Microsoft.Common.TextBox",
        "label": "Jointoken",
        "toolTip": "Enter Jointoken obtained from CSP.",
        "constraints": {
          "required": true,
          "regex": "^(?:[a-zA-Z0-9_\\-]+\\.)?[a-zA-Z0-9_\\-]{44}(?:\\.[a-zA-Z0-9_\\-]+)?$",
          "validationMessage": "Insert valid Jointoken."
        },
        "visible": "true"
      },
      {
        "name": "httpProxy",
        "type": "Microsoft.Common.TextBox",
        "label": "HTTP proxy",
        "toolTip": "Pass http proxy E.g: http://[username:passwod@]&lt;proxy_host&gt;:&lt;proxy_port&gt;",
        "constraints": {
          "required": false,
          "regex": "^http:\\/\\/(([^:]{1,128}):([^@]{1,256})@)?((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(\\[((([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))\\])|(((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9].)+[a-zA-Z]{2,63}))\\:(6553[0-5]|655[0-2][0-9]|65[0-4][0-9][0-9]|6[0-4][0-9][0-9][0-9]|[1-5][0-9][0-9][0-9][0-9]|[1-9][0-9]{0,3})$",
          "validationMessage": "Enter correct HTTP Proxy"
        },
        "visible": "true"
      }
    ],
    "steps": [
      {
        "name": "vmSettings",
        "label": "VM Settings",
        "bladeTitle": "Bloxone VM settings",
        "subLabel": {
          "preValidation": "Configure VM Settings",
          "postValidation": "Done"
        },
        "elements": [
          {
            "name": "network",
            "type": "Microsoft.Network.VirtualNetworkCombo",
            "label": {
              "virtualNetwork": "Virtual network",
              "subnets": "Subnets"
            },
            "toolTip": {
              "virtualNetwork": "Only virtual networks in the currently selected subscription and location are listed. If you choose to create a new virtual network, it will be created in the same subscription, location, and resource group as the storage account."
            },
            "constraints": {
              "minAddressPrefixSize": "/29"
            },
            "options": {
              "hideExisting": false
            },
            "subnets": {
              "subnet1": {
                "label": "Subnet",
                "defaultValue": {
                  "name": "subnet1"
                },
                "constraints": {
                  "minAddressPrefixSize": "/30"
                }
              }
            },
            "visible": true
          },
          {
            "name": "publicIp",
            "type": "Microsoft.Network.PublicIpAddressCombo",
            "label": {
              "publicIpAddress": "Public IP address"
            },
            "toolTip": {
              "publicIpAddress": "Use a public IP address if you want to communicate with the virtual machine from outside the virtual network."
            },
            "options": {
              "hideNone": false,
              "hideDomainNameLabel": true,
              "hideExisting": false,
              "zone": 3
            },
            "visible": true
          },
          {
            "name": "securityGroup",
            "type": "Microsoft.Common.DropDown",
            "label": "Security group",
            "toolTip": "Select inbound ports.",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Bootstrap UI (443)",
                  "value": "bootstrapUi"
                }
              ]
            },
            "visible": true
          },
          {
            "name": "serialConsole",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Serial Console",
            "defaultValue": "No",
            "toolTip": "Activate the serial console.",
            "constraints": {
              "allowedValues": [
                {
                  "label": "No",
                  "value": "No"
                },
                {
                  "label": "Yes",
                  "value": "Yes"
                }
              ],
              "required": true
            },
            "visible": true
          },
          {
            "name": "storageAccount",
            "type": "Microsoft.Storage.StorageAccountSelector",
            "label": "Storage account",
            "toolTip": "Choose storage account for Serial console. Must be Standard_GRS type.",
            "defaultValue": {
              "type": "Standard_GRS"
            },
            "constraints": {
              "allowedTypes": [
                "Standard_GRS",
                "Standard_LRS",
                "Standard_RAGRS"
              ]
            },
            "options": {
              "hideExisting": false
            },
            "visible": "[equals(steps('vmSettings').serialConsole, 'Yes')]"
          }
        ]
      },
      {
        "name": "tags",
        "label": "Tags",
        "bladeTitle": "Bloxone Tags",
        "subLabel": {
          "preValidation": "Configure tags",
          "postValidation": "Done"
        },
        "elements": [
          {
            "name": "tagsByResource",
            "type": "Microsoft.Common.TagsByResource",
            "resources": [
              "Microsoft.Network/networkInterfaces",
              "Microsoft.Network/publicIPAddresses",
              "Microsoft.Storage/storageAccounts",
              "Microsoft.Network/networkSecurityGroups",
              "Microsoft.Compute/virtualMachines",
              "Microsoft.Network/virtualNetworks"
            ]
          }
        ]
      }
    ],
    "outputs": {
      "jointoken": "[basics('jointoken')]",
      "httpProxy": "[basics('httpProxy')]",
      "location": "[location()]",
      "publicIPAddressName": "[steps('vmSettings').publicIp.name]",
      "publicIpExistingRgName": "[steps('vmSettings').publicIp.resourceGroup]",
      "publicIpNewOrExistingOrNone": "[steps('vmSettings').publicIp.newOrExistingOrNone]",
      "securityGroup": "[if(startsWith(string(steps('vmSettings').securityGroup), '['), steps('vmSettings').securityGroup, parse(concat('[\"',steps('vmSettings').securityGroup,'\"]')))]",
      "storageAccountName": "[steps('vmSettings').storageAccount.name]",
      "storageAccountType": "[steps('vmSettings').storageAccount.type]",
      "storageAccountNewOrExistingOrNone": "[if(empty(steps('vmSettings').storageAccount.newOrExisting), 'none', steps('vmSettings').storageAccount.newOrExisting)]",
      "storageAccountExistingRG": "[steps('vmSettings').storageAccount.resourceGroup]",
      "subnet1Name": "[steps('vmSettings').network.subnets.subnet1.name]",
      "subnet1Prefix": "[steps('vmSettings').network.subnets.subnet1.addressPrefix]",
      "virtualNetworkAddressPrefix": "[steps('vmSettings').network.addressPrefix]",
      "virtualNetworkExistingRGName": "[steps('vmSettings').network.resourceGroup]",
      "virtualNetworkName": "[steps('vmSettings').network.name]",
      "vmName": "[basics('vmName')]",
      "vmSize": "[basics('vmSize')]",
      "vnetNewOrExisting": "[steps('vmSettings').network.newOrExisting]",
      "tagsByResource": "[steps('tags').tagsByResource]"
    }
  }
}
