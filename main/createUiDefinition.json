{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Azure.CreateUIDef",
  "version": "0.1.2-preview",
  "parameters": {
    "config": {
      "isWizard": false,
      "basics": {
        "resourceGroup": {
          "constraints": {
            "validations": [
              {
                "isValid": "[not(contains(resourceGroup().name, 'test'))]",
                "message": "Resource Group name can not contain test"
              }
            ]
          },
          "allowExisting": true
        }
      }
    },
    "basics": [
	    {
          "name": "availabilityOptions",
          "type": "Microsoft.Common.DropDown",
          "label": "Availability options",
          "toolTip": "Select the availability option.",
          "constraints": {
            "allowedValues": [
			        { "label": "No infrastructure redundancy required", "value": "no infrastructure"},
              { "label": "Availability zone", "value": "availabilityZone" }
            ]
          },
		    "visible": "[or(equals(location(), 'eastus'), equals(location(), 'australiaeast'), equals(location(), 'brazilsouth'), equals(location(), 'canadacentral'), equals(location(), 'centralindia'), equals(location(), 'centralus'), equals(location(), 'eastasia'), equals(location(), 'eastus2'), equals(location(), 'francecentral'), equals(location(), 'germanywestcentral'), equals(location(), 'israelcentral'), equals(location(), 'italynorth'), equals(location(), 'japaneast'), equals(location(), 'japanwest'), equals(location(), 'koreacentral'), equals(location(), 'mexicocentral'), equals(location(), 'newzealandnorth'), equals(location(), 'northeurope'), equals(location(), 'norwayeast'), equals(location(), 'polandcentral'), equals(location(), 'qatarcentral'), equals(location(), 'southafricanorth'), equals(location(), 'southcentralus'), equals(location(), 'southeastasia'), equals(location(), 'spaincentral'), equals(location(), 'swedencentral'), equals(location(), 'switzerlandnorth'), equals(location(), 'uaenorth'), equals(location(), 'uksouth'), equals(location(), 'westeurope'), equals(location(), 'westus2'), equals(location(), 'westus3'))]"
      },
      {
          "name": "zoneOptions",
          "type": "Microsoft.Common.OptionsGroup",
          "label": "Zone options",
          "toolTip": "Select the zone option.",
          "constraints": {
            "allowedValues": [
              { "label": "Self-selected zone", "value": "selfSelected" },
              { "label": "Azure-selected zone (Preview)", "value": "azureSelected" }
            ]
          },
		      "visible": "[equals(basics('availabilityOptions'), 'availabilityZone')]"
      },
      {
          "name": "availabilityZone",
          "type": "Microsoft.Common.DropDown",
          "label": "Availability zone",
		      "defaultValue": "Zone 1",
		      "toolTip": "Availability zones can be selected",
          "constraints": {
            "allowedValues": [
              { "label": "Zone 1", "value": "1" },
              { "label": "Zone 2", "value": "2" },
              { "label": "Zone 3", "value": "3" }
            ]
          },
          "visible": "[equals(basics('zoneOptions'), 'selfSelected')]"
      },
      {
        "name": "vmName",
        "type": "Microsoft.Common.TextBox",
        "label": "Bloxone VM name",
        "defaultValue": "Bloxone",
        "toolTip": "The name of the new Bloxone vm.",
        "multiLine": false,
        "constraints": {
          "required": true,
          "regex": "^(([0-9a-zA-Z][0-9a-zA-Z-.]{0,63}[0-9a-zA-Z])|[0-9a-zA-Z]).{1,64}$",
          "validationMessage": "The length must be between 1 and 64 characters. The first and the last characters must be letters or numbers. The remaining characters must be letters, numbers, periods or dashes."
        },
        "visible": true
      },
      {
        "name": "vmSize",
        "type": "Microsoft.Compute.SizeSelector",
        "label": "VM size",
        "toolTip": "Select a VM size to support the workload that you want to run. The size that you choose then determines factors such as processing power, memory, and storage capacity. Azure offers a wide variety of sizes to support many types of uses. Azure charges an hourly price based on the VM's size and operating system.Learn more about Virtual Machine sizes",
        "recommendedSizes": [
          "Standard_F8s"
        ],
        "constraints": {
          "allowedSizes": [
            "Standard_E2s_v3",
            "Standard_B2s",
            "Standard_B2ms",
            "Standard_B4ms",
            "Standard_B8ms",
            "Standard_B12ms",
            "Standard_B16ms",
            "Standard_B20ms",
            "Standard_F4s",
            "Standard_F8s",
            "Standard_F16s"
          ]
        },
        "visible": "true",
        "osPlatform": "Linux"
      },
      {
        "name": "injecting",
        "type": "Microsoft.Common.OptionsGroup",
        "label": "Injecting",
        "defaultValue": "Jointoken",
        "toolTip": "Choose the type of injection.",
        "constraints": {
          "allowedValues": [
            {
              "label": "Jointoken",
              "value": "Jointoken"
            },
            {
              "label": "Custom Data",
              "value": "Custom Data"
            }
          ],
          "required": true
        },
        "visible": true
      },
      {
        "name": "jointoken",
        "type": "Microsoft.Common.TextBox",
        "label": "Jointoken",
        "toolTip": "Pass Jointoken.",
        "constraints": {
          "required": true,
          "regex": "^[a-zA-Z0-9_-]{44,44}$",
          "validationMessage": "Insert validate Jointoken."
        },
        "visible": "[equals(basics('injecting'), 'Jointoken')]"
      },
      {
        "name": "customData",
        "type": "Microsoft.Common.TextBox",
        "label": "Custom data",
        "toolTip": "Pass Custom Data for cloudinit.",
        "multiLine": true,
        "constraints": {
          "required": false,
          "regex": "(?=.*).{0,100000}",
          "validationMessage": "The Custom data cannot be more than 100000 characters."
        },
        "visible": "[equals(basics('injecting'), 'Custom Data')]"
      }
    ],
    "steps": [
      {
        "name": "disks",
        "label": "Disks",
        "bladeTitle": "Disks",
        "subLabel": {
          "preValidation": "Configure disks",
          "postValidation": "Done"
        },
        "elements": [
          {
            "name": "InfoAdvanced",
            "type": "Microsoft.Common.InfoBox",
            "visible": "true",
            "options": {
              "icon": "Info",
              "text": "This section consists of disk related information for your virtual machine. You can specify the size and type of disks to use for your VM."
            }
          },
          {
            "name": "osDiskSize",
            "type": "Microsoft.Common.TextBox",
            "label": "OS Disk Size for VM (GiB)",
            "toolTip": "Specify the size of the Disk. The Disk size should be between 60GB and 2500GB",
            "defaultValue": "60",
            "constraints": {
              "regex": "^(6[0-9]|7[0-9]|8[0-9]|9[0-9]|1[0-9]{2}|1[1-9][0-9]{2}|2[0-4][0-9]{2}|2500)$",
              "validationMessage": "The size must be in numbers and minimum allowed size is 60GB and maximum is 2500GB"
            }
          },
          {
            "name": "osDiskType",
            "type": "Microsoft.Common.DropDown",
            "label": "OS Disk type",
            "defaultValue": "Premium_LRS",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Standard HDD (Standard_LRS)",
                  "value": "Standard_LRS"
                },
                {
                  "label": "Standard SSD (StandardSSD_LRS)",
                  "value": "StandardSSD_LRS"
                },
                {
                  "label": "Premium SSD (Premium_LRS)",
                  "value": "Premium_LRS"
                }
              ]
            },
            "toolTip": "Select the type of OS disk."
          }
        ]
      },  
      {
        "name": "networking",
        "label": "Networking",
        "subLabel": {
          "preValidation": "Configure networking",
          "postValidation": "Done"
        },
        "bladeTitle": "Networking",
        "elements": [
          {
            "name": "InfoAdvanced",
            "type": "Microsoft.Common.InfoBox",
            "visible": "true",
            "options": {
              "icon": "Info",
              "text": "Define network connectivity for your virtual machine by configuring network interface card (NIC) settings. You can control ports, inbound and outbound connectivity with security group rules, or place behind an existing load balancing solution."
            }
          },
          {
            "name": "virtualNetwork",
            "type": "Microsoft.Network.VirtualNetworkCombo",
            "label": {
              "virtualNetwork": "Virtual network",
              "subnets": "Subnets"
            },
            "toolTip": {
              "virtualNetwork": "Only virtual networks in the currently selected subscription and location are listed. If you choose to create a new virtual network, it will be created in the same subscription, location, and resource group as the VM."
            },
            "defaultValue": {
              "addressPrefixSize": "/16"
            },
            "constraints": {
              "minAddressPrefixSize": "/29"
            },
            "options": {
              "hideExisting": false
            },
            "subnets": {
              "subnet1": {
                "label": "Subnet",
                "defaultValue": {
                  "name": "subnet1",
                  "addressPrefixSize": "/24"
                },
                "constraints": {
                  "minAddressPrefixSize": "/30"
                }
              }
            },
            "visible": true
          },
          {
            "name": "publicIp",
            "type": "Microsoft.Network.PublicIpAddressCombo",
            "label": {
              "publicIpAddress": "Public IP address"
            },
            "toolTip": {
              "publicIpAddress": "Use a public IP address if you want to communicate with the virtual machine from outside the virtual network."
            },
            "options": {
              "hideNone": false,
              "hideDomainNameLabel": true,
              "hideExisting": false,
              "zone": 3
            },
            "visible": true
          },
          {
            "name": "securityGroup",
            "type": "Microsoft.Common.DropDown",
            "label": "Security group",
            "toolTip": "Select inbound ports.",
            "multiselect": true,
            "selectAll": true,
            "constraints": {
              "allowedValues": [
                {
                  "label": "Bootstrap UI (443)",
                  "value": "bootstrapUi"
                },
                {
                  "label": "SSH (22)",
                  "value": "ssh"
                }
              ]
            },
            "visible": true
          },
          {
            "name": "enableIPForwarding",
            "type": "Microsoft.Common.CheckBox",
            "label": "Enable IP Forwarding",
            "toolTip": "Enable IP forwarding for VM.",
            "defaultValue": false
          },
          {
            "name": "info",
            "type": "Microsoft.Common.InfoBox",
            "visible": "[or(equals(basics('vmSize'), 'Standard_E2s_v3'), equals(basics('vmSize'), 'Standard_F4s'), equals(basics('vmSize'), 'Standard_F8s'), equals(basics('vmSize'), 'Standard_F16s'))]",
            "options": {
              "icon": "Info",
              "text": "Accelerated networking is a feature that enables single root I/O virtualization (SR-IOV) for virtual machines. This can improve network performance and reduce CPU utilization."
            }
          },
          {
            "name": "enableAcceleratedNetworking",
            "type": "Microsoft.Common.CheckBox",
            "label": "Enable accelerated networking",
            "toolTip": "Enables low latency and high throughput on the network interface.",
            "defaultValue": false,
		        "visible": "[or(equals(basics('vmSize'), 'Standard_E2s_v3'), equals(basics('vmSize'), 'Standard_F4s'), equals(basics('vmSize'), 'Standard_F8s'), equals(basics('vmSize'), 'Standard_F16s'))]"
          },
          {
            "name": "serialConsole",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Serial Console",
            "defaultValue": "No",
            "toolTip": "Activate the serial console.",
            "constraints": {
              "allowedValues": [
                {
                  "label": "No",
                  "value": "No"
                },
                {
                  "label": "Yes",
                  "value": "Yes"
                }
              ],
              "required": true
            },
            "visible": true
          },
          {
            "name": "storageAccount",
            "type": "Microsoft.Storage.StorageAccountSelector",
            "label": "Storage account",
            "toolTip": "Choose storage account for Serial console. Must be Standard_GRS type.",
            "defaultValue": {
              "type": "Standard_GRS"
            },
            "constraints": {
              "allowedTypes": ["Standard_GRS", "Standard_LRS", "Standard_RAGRS"]
            },
            "options": {
              "hideExisting": false
            },
            "visible": "[equals(steps('networking').serialConsole, 'Yes')]"
          }
        ]
      },
      {
        "name": "tags",
        "label": "Tags",
        "bladeTitle": "Bloxone Tags",
        "subLabel": {
          "preValidation": "Configure tags",
          "postValidation": "Done"
        },
        "elements": [
          {
            "name": "tagsByResource",
            "type": "Microsoft.Common.TagsByResource",
            "tooltip": "Manage tags for resources.",
            "resources": [
              "Microsoft.Network/networkInterfaces",
              "Microsoft.Network/publicIPAddresses",
              "Microsoft.Storage/storageAccounts",
              "Microsoft.Network/networkSecurityGroups",
              "Microsoft.Compute/virtualMachines",
              "Microsoft.Network/virtualNetworks"
            ]
          }
        ]
      }
    ],
    "outputs": {
      "customData": "[basics('customData')]",
      "jointoken": "[basics('jointoken')]",
      "location": "[location()]",
      "publicIPAddressName": "[steps('networking').publicIp.name]",
      "publicIpExistingRgName": "[steps('networking').publicIp.resourceGroup]",
      "publicIpNewOrExistingOrNone": "[steps('networking').publicIp.newOrExistingOrNone]",
      "securityGroupSsh": "[if(contains(steps('networking').securityGroup, 'ssh'), 'true', 'false')]",
      "securityGroupBootstrapUi": "[if(contains(steps('networking').securityGroup, 'bootstrapUi'), 'true', 'false')]",
      "storageAccountName": "[steps('networking').storageAccount.name]",
      "storageAccountType": "[steps('networking').storageAccount.type]",
      "storageAccountNewOrExistingOrNone": "[if(empty(steps('networking').storageAccount.newOrExisting), 'none', steps('networking').storageAccount.newOrExisting)]",
      "storageAccountExistingRG": "[steps('networking').storageAccount.resourceGroup]",
      "subnet1Name": "[steps('networking').virtualNetwork.subnets.subnet1.name]",
      "subnet1Prefix": "[steps('networking').virtualNetwork.subnets.subnet1.addressPrefix]",
      "virtualNetworkAddressPrefix": "[steps('networking').virtualNetwork.addressPrefix]",
      "virtualNetworkExistingRGName": "[steps('networking').virtualNetwork.resourceGroup]",
      "virtualNetworkName": "[steps('networking').virtualNetwork.name]",
      "vmName": "[basics('vmName')]",
      "vmSize": "[basics('vmSize')]",
      "vnetNewOrExisting": "[steps('networking').virtualNetwork.newOrExisting]",
      "osDiskSize": "[steps('disks').osDiskSize]",
      "osDiskType": "[steps('disks').osDiskType]",
      "availabilityZone": "[basics('availabilityZone')]",
      "availabilityOptions": "[basics('availabilityOptions')]",
      "zoneOptions": "[basics('zoneOptions')]",
      "injecting": "[basics('injecting')]",
      "enableIPForwarding": "[steps('networking').enableIPForwarding]",
      "enableAcceleratedNetworking": "[steps('networking').enableAcceleratedNetworking]"
    }
  }
}
